version: '3.9'
services:
  web:
    build: .
    command: >
      bash -c "python manage.py migrate && ./install_fixtures.sh && uwsgi --http 0.0.0.0:8080 --module hasker.wsgi"
    env_file:
      - demo.env
    volumes:
      - static_volume:/hasker/files_static
      - media_volume:/hasker/files_media
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - app-network

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/files_static
      - media_volume:/files_media
    ports:
      - "8000:80"
    depends_on:
      - web
    networks:
      - app-network

  db:
    image: postgres:latest
    env_file:
      - demo.env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5



networks:
  app-network:

volumes:
  postgres_data:
  static_volume:
  media_volume:
